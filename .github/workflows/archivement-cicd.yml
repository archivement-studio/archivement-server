name: archivement-cicd CI/CD

# event trigger
on:
  push:
    branches:
      - dev
      - main

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:

    ## github checkout
    - name: Checkout
      uses: actions/checkout@v3
    
    ## aws credentials 생성
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     role-to-assume: ${{ secrets.AWS_ARN }}
    #     aws-region: ${{ secrets.ECR_REGION }}

    ## aws credentials 생성
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    ## docker build & push to production
    # sudo aws ecr get-login-password --region ${{ secrets.ECR_REGION }} | docker login --username ${{ secrets.ECR_USERNAME }} --password-stdin ${{ secrets.ECR_PASSWORD }}
    - name: Docker build & push to ECR
      if: contains(github.ref, 'dev')
      run: |
          sudo aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 186952256580.dkr.ecr.ap-northeast-2.amazonaws.com
          sudo docker build --platform linux/amd64 -t ${{ secrets.ECR_REPO }} .
          sudo docker tag ${{ secrets.ECR_REPO }}:latest ${{ secrets.ECR_PASSWORD }}/${{ secrets.ECR_REPO }}:latest
          echo "melon"
          sudo docker push ${{ secrets.ECR_PASSWORD }}/${{ secrets.ECR_REPO }}:latest

    # ## deploy to production
    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      id: deploy-prod
      if: contains(github.ref, 'main')
      with:
          host: ${{ secrets.ARCHIVEMENT_SERVER_HOST }}
          username: ${{ secrets.ARCHIVEMENT_SERVER_USERNAME }}
          port: ${{ secrets.ARCHIVEMENT_SERVER_PORT }}
          key: ${{ secrets.ARCHIVEMENT_PRIVATE_KEY }}
          script: |
              sudo apt-get update
              cd ./archivement-server
              echo "hello"
              sudo docker compose down
              echo "hello world"
              sudo docker rmi $(sudo docker images -q)
              echo "hello father"
              sudo aws ecr get-login-password --region ${{ secrets.ECR_REGION }} | docker login --username ${{ secrets.ECR_USERNAME }} --password-stdin ${{ secrets.ECR_PASSWORD }}
              echo "hello dragon"
              docker pull ${{ secrets.ECR_PASSWORD }}/${{ secrets.ECR_REPO }}:latest
              echo "hello mother"
              sudo docker image prune -f
              echo "hello grandman"
              sudo docker compose up -d
              echo "hello pistol"
